Printf behavior

start by setting a char** of all args

We printf buffer at the end of everything
Buffer takes all the results put together before printing

Character :
- get char
- create new string result
- If . || 0 || (0 && .) =
    - Flags && number are ignored
- If * = 
    - Get number in flag before “c”
- If number  = 
    - malloc result = number - 1
- If number neg  || flag - = 
    - put char in result then number-1 of spaces in result
    - If two - || - && number neg =
        - number is counted as positive 
        - Flag stays
- Else = 
    - put number of char-1 of spaces then char in result
- ft_strjoin = buffer && result
- Return buffer


String : 
- Get string
- Create new string result
- If 0 || (. && 0)= 
    - Flag && numbers are ignored
- if (. && NO numbers) || (. && number neg)=
    - Flag is ignored
- If . && number = 
    - malloc result = number
    - Put string in result UNTIL number
- If * =
    - Get number in flag before “s”
- If number =
    - malloc result = (number - strlen(string)) + strlen(string)
    - If two - || - && number neg =
        - number is counted as positive 
        - Flag stays
    - Else If number neg || flag - =
        - Put string in result THEN put spaces until end
    - else =
        - Put spaces until (number - strlen(string)) in result THEN put string in result
- 


p :
- I don’t know yet


d-i :
- Get int
- Create new string result
- ft_itoa = int
- If * =
    - Get number in flag before “d”_”I”
- If number =
    - malloc result = (number - strlen(ft_itoa)) + strlen(ft_itoa)
    - If two - || - && number neg =
        - number is counted as positive 
        - Flag stays
    - If number neg || flag -=
        - Put ft_itoa in result THEN put spaces until end
    - else =
        - Put spaces until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
- If (0 && number) || (. && number)=
    - malloc result = (number - strlen(ft_itoa)) + strlen(ft_itoa)
    - If - && 0
        - 0 flag is ignored, - flag is kept
        - If two - || - && number neg =
            - number is counted as positive 
            - Flag stays
        - If number neg || flag - =
            - Put ft_itoa in result THEN put spaces until end
        - else =
            - Put spaces until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
    - else =
        - if number neg = 
            - Flag is ignored
        - else = 
            - Put “0” char until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
- Else if (0 && NO number) || (0 && .) =
    - flag is ignored


u : 
- Get int
- Create new string result
- ft_itoa = int
- If * =
    - Get number in flag before “d”_”I”
- If number =
    - malloc result = (number - strlen(ft_itoa)) + strlen(ft_itoa)
    - If two - || - && number neg =
        - number is counted as positive 
        - Flag stays
    - If number neg || flag -=
        - Put itoa in result THEN put spaces until end
    - else =
        - Put spaces until (number - strlen(itoa)) in result THEN put ft_itoa in result
- If (0 && number) || (. && number)=
    - malloc result = (number - strlen(itoa)) + strlen(itoa)
    - If - && 0
        - 0 flag is ignored, - flag is kept
        - If two - || - && number neg =
            - number is counted as positive 
            - Flag stays
        - If number neg || flag - =
            - Put itoa in result THEN put spaces until end
        - else =
            - Put spaces until (number - strlen(itoa)) in result THEN put itoa in result
    - else =
        - if number neg = 
            - Flag is ignored
        - else = 
            - Put “0” char until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
- Else if (0 && NO number) || (0 && .) =
    - flag is ignored


xX :
- Get int
- Create new string result
- itoa_base = int
- If * =
    - Get number in flag before “d”_”I”
- If number =
    - malloc result = (number - strlen(ft_itoa)) + strlen(ft_itoa)
    - If two - || - && number neg =
        - number is counted as positive 
        - Flag stays
    - If number neg || flag -=
        - Put ft_itoa in result THEN put spaces until end
    - else =
        - Put spaces until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
- If (0 && number) || (. && number)=
    - malloc result = (number - strlen(ft_itoa)) + strlen(ft_itoa)
    - If - && 0
        - 0 flag is ignored, - flag is kept
        - If two - || - && number neg =
            - number is counted as positive 
            - Flag stays
        - If number neg || flag - =
            - Put ft_itoa in result THEN put spaces until end
        - else =
            - Put spaces until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
    - else =
        - if number neg = 
            - Flag is ignored
        - else = 
            - Put “0” char until (number - strlen(ft_itoa)) in result THEN put ft_itoa in result
- Else if (0 && NO number) || (0 && .) =
    - flag is ignored


%% :
- 


